==Wildlife tracker
The Forest Service is considering a proposal from a timber company to clear-cut an old-growth forest of virgin Douglas fir just outside of Portland. Before they give the go-ahead, they need to do an environmental impact study. They've asked you and your pair to build an app so that the rangers can report wildlife sightings.

* Start out by letting users CRUD/L (create, read, update, destroy, list) species. (COMPLETE)
* Next, allow them to input a sighting of an animal, along with the date, time, and location. (Hint: a species has many sightings.) Add CRUD functionality for these sightings.
* Now, the area under consideration has been divided into several regions. Build out CRUD/L functionality for regions, and when a user reports a sighting, have them choose the region from a drop-down menu. (Hint: do a web search for html drop-down mdn.)
* Bonus: let users run reports to list all the sightings during a given time period. Write a form that looks something like this:

<form action="/sightings" method="get">
  <label for="sightings_start_date">Start date</label>
  <input id="sightings_start_date" name="sightings[start_date]" type="text">
  <label for="sightings_end_date">End date</label>
  <input id="sightings_end_date" name="sightings[end_date]" type="text">
  <button>Run report</button>
</form>

Now, your controller action will need to look something like this:

class SightingsController < ApplicationController
  def index
    @sightings = Sightings.between(params[sightings])
    render('sightings/index.html.erb')
  end
end
This code may not be exactly correct... but should get you on the right path.

Finally, let users narrow their reports down to a particular region.

To run on Heroku:

bundle install --without production
bundle
When you start working on a new computer, generate a new pair of SSH keys by typing $ ssh-keygen -t rsa -C your_email@address.com. Press enter without typing anything when it prompts you for the file and for the passphrase. If it prompts you to overwrite the existing keys, say yes.
Run $ heroku login and enter your Heroku credentials when prompted.
Run $ heroku keys:add to add the SSH keys for this machine to your Heroku account.
Set up your Heroku app.
If you haven't created a Heroku app yet, run $ heroku create your_app_name.
If you have already created a Heroku app for this project, run $ heroku git:remote -a your_app_name to add a Git remote called heroku that points to your Heroku app.
**Push your code to Heroku with $ git push heroku master.
**THEN RUN $ heroku run db:migrate
(to create new species /species is the index)

Give your pair access to the app with $ heroku sharing:add your_pairs_email@their_address.com.
When you're done with the machine, remove your SSH keys from Heroku with $ heroku keys:remove your_email@address.com, delete them from the computer with $ rm ~/.ssh/*, and log out of Heroku with $ heroku logout.
If you get the error Permission denied (publickey), run $ rm ~/.ssh/* to clear the SSH settings off the machine, and then try again starting with step 1.
